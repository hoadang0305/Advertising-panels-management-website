<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.0.2/js/toastr.min.js"></script>
  <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
  <style>
    .container {
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0;
    }

    .card {
      border: 1px solid #ddd;
      border-radius: 8px;
      margin: 20px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      line-height: 2.15;
      max-width: 700px;
      width: 100%;
    }

    .card-header {
      text-align: center;
      background-color: #3498db;
      color: #ffffff;
      padding: 15px;
      border-bottom: 1px solid #ddd;
      border-radius: 7px 7px 0 0;
    }

    .card-body {
      padding: 20px;
    }

    .form-group {
      margin-bottom: 20px;
    }

    label {
      display: block;
      margin-bottom: 5px;
      color: #333;
    }

    input.form-control {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      margin-bottom: 10px;
      box-sizing: border-box;
      border: 1px solid #ccc;
      border-radius: 4px;
    }

    .card-footer {
      border-top: 1px solid #ddd;
      padding: 15px;
      text-align: right;
      border-radius: 0 0 7px 7px;
    }

    .btn-outline-success {
      color: #28a745;
      border: 2px solid #28a745;
      background-color: #ffffff;
    }

    .btn-outline-success:hover {
      background-color: #28a745;
      color: #ffffff;
    }

    .btn-primary {
      background-color: #3498db;
      color: #ffffff;
      border: 2px solid #3498db;
    }

    .btn-primary:hover {
      background-color: #2e86de;
      border: 2px solid #2e86de;
    }
  </style>
</head>

<body>

  <form id="editWardForm" action="" method="">
    <div class="container">
      <div class="card">
        <h5 class="card-header">
          Edit Ward
        </h5>
        <div class="card-body">
          <div class="form-group">
            <label for="districtRefId">District ID</label>
            <input type="text" name="districtRefId" id="districtRefId" class="form-control" readonly
              value="{{districtRefId}}">
          </div>
          <div class="form-group">
            <label for="wardId">Ward ID</label>
            <input type="text" name="wardId" id="wardId" class="form-control" readonly value="{{wardId}}">
          </div>
          <div class="form-group">
            <label for="txtWardName">Ward Name</label>
            <input type="text" name="wardName" id="txtWardName" class="form-control" placeholder="{{wardName}}"
              autofocus>
          </div>
        </div>
        <div class="card-footer text-muted">
          <a class="btn btn-outline-success" href="/api/controlWardDistrict" role="button">
            <i class="bi bi-skip-backward-fill"></i>
            Back
          </a>
          <button type="button" class="btn btn-danger" id="deleteButton">
            <i class="bi bi-trash-fill"></i>
            Delete
          </button>
          <button type="button" class="btn btn-primary" id="saveButton">
            <i class="bi bi-check2"></i>
            Save
          </button>
        </div>
      </div>
    </div>
  </form>

  <script>
    toastr.options.closeButton = true;
    toastr.options = {
      "closeButton": true,
      "debug": false,
      "newestOnTop": false,
      "progressBar": false,
      "positionClass": "toast-bottom-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "300",
      "timeOut": "2000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    }
    document.addEventListener('DOMContentLoaded', function () {
      // Function to send PUT request
      const sendPutRequest = async () => {
        const txtWardNameInput = $('#txtWardName');
        const wardId = document.getElementById('wardId').value;
        const districtRefId = document.getElementById('districtRefId').value;
        if (!txtWardNameInput.val()) {
          toastr.error("Error: Ward Name is require.");
          txtWardNameInput.addClass('border-danger');
          txtWardNameInput.focus();
        }
        else {
          txtWardNameInput.removeClass('border-danger');
          try {
            const response = await fetch(`http://localhost:3500/api/ward/update-ward/${wardId}`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                wardName: txtWardNameInput.val(),
                districtRefId: districtRefId
              }),
            });

            if (response.status === 200) {
              toastr.options.onHidden = () => { window.location.href = "/api/controlWardDistrict" }
              toastr.success("Update Ward Successful")
            } else {
              toastr.error("The Ward Name is already");
            }
          } catch (error) {
            toastr.error("An error occurred. Please try again.");
          }
        }

      };

      // Function to send DELETE request
      const sendDeleteRequest = async () => {
        const wardId = document.getElementById('wardId').value;
        const districtRefId = document.getElementById('districtRefId').value;
        try {
          const response = await fetch(`http://localhost:3500/api/ward/delete-ward/${wardId}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              districtRefId: districtRefId
            }),
          });

          if (response.ok) {
            toastr.options.onHidden = () => { window.location.href = "/api/controlWardDistrict" }
            toastr.success("Delete Ward Successful")
          } else {
            toastr.error("Delete failed. Please try again.");
          }
        } catch (error) {
          toastr.error("An error occurred. Please try again.");
        }
      };

      // Add click event listeners to buttons
      const saveButton = document.getElementById('saveButton');
      const deleteButton = document.getElementById('deleteButton');

      if (saveButton) {
        saveButton.addEventListener('click', sendPutRequest);
      }

      if (deleteButton) {
        deleteButton.addEventListener('click', sendDeleteRequest);
      }
    });
  </script>
</body>

</html>