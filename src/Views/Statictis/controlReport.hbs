<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.0.2/js/toastr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
    <style>
        .table tbody tr.highlighted {
            background-color: #dfdfdf;
        }

        h2{
            text-align: center;
        }
        
        th,
        td {
            padding: 12px;
            text-align: center;
            border: 1px solid #ddd;
            
            width: calc(100% / 9);
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;

        }

        th:nth-child(3),
        th:nth-child(4),
        th:nth-child(8),
        th:nth-child(9) {
            max-width: 200px;
        }

        th {
            background-color: #4CAF50;
            color: white;
        }
    </style>
</head>

<body>
    <div class="control-responsive p-4 d-flex flex-column align-items-center">
        <div class="container mt-3">
            <h2 class="mb-4">Xử lý báo cáo</h2>

            <div class="d-flex justify-content-between align-items-end mb-4" id="filters-container">
                <div class="row flex-fill mr-3" id="filters">
                    <div class="form-group col-3">
                        <label for="district">Phường</label>
                        <input type="text" class="form-control" id="ward" name="ward" value="{{authUser.role.[0]}}"
                            readonly>
                    </div>
                    <div class="form-group col-3">
                        <label for="ward">Quận</label>
                        <input type="text" class="form-control" id="district" name="district"
                            value="{{authUser.role.[1]}}" readonly>
                    </div>
                    <div class="form-group col-6">
                        <label for="email">Người gửi</label>
                        <input type="text" class="form-control" id="emailInput"
                            placeholder="Nhập email người gửi báo cáo">
                    </div>
                </div>
                <div class="form-group ml-auto">
                    <label>&nbsp;</label>
                    <button type="button" class="btn btn-outline-primary float-right" onclick="filterReports()">
                        <i class="bi bi-funnel"></i>
                        Lọc
                    </button>
                </div>
            </div>

            <div class="d-flex" id="info-container">

                <div class="table-responsive">
                    <table class="table table-hover" id="reportsTable">
                        <thead>
                            <tr>
                                <th>Thời điểm gửi</th>
                                <th>Địa chỉ Email</th>
                                <th>Tên người gửi</th>
                                <th>Số điện thoại</th>
                                <th>Phường</th>
                                <th>Quận</th>
                                <th>Địa chỉ</th>
                                <th>Tình trạng</th>
                                <th>Cách xử lý</th>
                            </tr>
                        </thead>
                        <tbody id="reportsBody">
                            <!-- Reports will be dynamically added here -->
                        </tbody>
                    </table>
                </div>

                <!-- Modal for detailed information -->
                <div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="info-modal-title"
                    aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="info-modal-title">Chi tiết báo cáo</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div id="modalContent">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">
                                    Quay lại</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
    </div>




    <script>
        toastr.options.closeButton = true;
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "300",
            "timeOut": "2000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        document.addEventListener('DOMContentLoaded', async function () {
            // Replace wardId and disId with actual values or variables
            var wardId = document.getElementById('ward').value;
            var disId = document.getElementById('district').value;

            // Fetch wardName
            try {
                const wardResponse = await fetch(`http://localhost:3500/api/ward/getWardById/${wardId}`);
                const wardData = await wardResponse.json();

                // Assuming the response data structure includes wardName property
                var wardName = wardData.data.wardName;

                // Set the value of the ward input field
                document.getElementById('ward').value = wardName;
            } catch (error) {
                console.error('Error fetching ward data:', error);
            }

            // Fetch disName
            try {
                const disResponse = await fetch(`http://localhost:3500/api/district/getDisById/${disId}`);
                const disData = await disResponse.json();

                // Assuming the response data structure includes disName property
                var disName = disData.data.disName;

                // Set the value of the district input field
                document.getElementById('district').value = disName;
            } catch (error) {
                console.error('Error fetching district data:', error);
            }

            // Call filterReports after fetching ward and district values
            filterReports();
        });

        async function filterReports() {
            const wardSelect = document.getElementById('ward');
            const districtSelect = document.getElementById('district');
            const emailInput = document.getElementById('emailInput');

            const wardInput = wardSelect.value;
            const districtInput = districtSelect.value;
            const emailInputValue = emailInput.value.trim();

            let url;

            if (wardInput && districtInput && emailInputValue) {
                url = `http://localhost:3500/api/report/getReportByWardAndDisAndEmail/${wardInput}/${districtInput}/${emailInputValue}`;
            } else if (wardInput && districtInput) {
                url = `http://localhost:3500/api/report/getReportByWardAndDis/${wardInput}/${districtInput}`;
            } else if (districtInput) {
                url = `http://localhost:3500/api/report/getReportByDis/${districtInput}`;
            } else if (emailInputValue) {
                url = `http://localhost:3500/api/report/getReportByEmail/${emailInputValue}`;
            } else {
                url = 'http://localhost:3500/api/report/getAllReport';
            }

            try {
                const response = await fetch(url);
                const data = await response.json();

                if (data.status === 'OK') {
                    displayReports(data.data);
                } else {
                    toastr.error(`Error: ${data.message}`);
                }
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        function formatTimestamp(timestamp) {
            const date = new Date(timestamp);
            const formattedDate = date.toLocaleString(); // Adjust the formatting as needed
            return formattedDate;
        }

        async function displayReports(reports) {
            const reportsBody = document.getElementById('reportsBody');
            reportsBody.innerHTML = '';

            if (reports.length === 0) {
                // If no data, create a single row with a "No data" message
                const noDataRow = document.createElement('tr');
                const noDataCell = document.createElement('td');
                noDataCell.setAttribute('colspan', '9'); // Set colspan to cover all columns
                noDataCell.textContent = 'Không có dữ liệu';
                noDataRow.appendChild(noDataCell);
                reportsBody.appendChild(noDataRow);
            } else {
                // If there is data, create rows for each report
                reports.forEach(report => {
                    const row = document.createElement('tr');

                    row.innerHTML = `
                <td>${formatTimestamp(report.createdAt)}</td>
                <td>${report.email}</td>
                <td data-tooltip="${report.name}">${report.name}</td>
                <td>${report.phone}</td>
                <td>${report.ward}</td>
                <td>${report.district}</td>
                <td data-tooltip="${report.address}">${report.address}</td>
                <td style="color: ${getColorByState(report.state)}">${formatState(report.state)}</td>
                <td style="color: ${getColorByAction(report.actionHandler)}">${report.actionHandler}</td>
            `;

                    row.addEventListener('dblclick', () => {
                        loadDetails(report);
                        $('#detailsModal').modal('show');
                    });

                    row.addEventListener('click', () => highlightRow(row));

                    reportsBody.appendChild(row);
                });
            }
        }

        function getColorByState(state) {
            switch (state) {
                case 0:
                    return 'red';
                case 1:
                    return 'gold';
                case 2:
                    return 'green';
                default:
                    return 'black';
            }
        }

        function getColorByAction(actionHandler) {
            switch (actionHandler) {
                case 'Chưa xử lí':
                    return 'red';
                default:
                    return 'green';
            }
        }

        function formatState(state) {
            switch (state) {
                case 0:
                    return 'Chưa xử lí';
                case 1:
                    return 'Đang xử lí';
                case 2:
                    return 'Đã xử lí';
                default:
                    return 'Unknown';
            }
        }

        function loadDetails(report) {
            document.getElementById('modalContent').innerHTML = "";

            let imgDivs = "";

            if (report.reportPicture.length === 2) {
                imgDivs += `<img class="img-fluid" src="http://localhost:3500/api/reportImg/getImgReport/${report.reportPicture[0]}"" alt=""><br>
                                        <img class="img-fluid" src="http://localhost:3500/api/reportImg/getImgReport/${report.reportPicture[1]}"" alt=""><br><br>`
            }
            else if (report.reportPicture.length === 1) {
                imgDivs += `<img class="img-fluid" src="http://localhost:3500/api/reportImg/getImgReport/${report.reportPicture[0]}"" alt=""><br><br>`
            }

            const details = `<h6 class="card-subtitle mb-2 text-muted">${report.address}</h6>
                                          <p class="card-text">Họ tên người gửi: <b>${report.name}</b><br>
                                                            Email: <b>${report.email}</b><br>
                                                            Số điện thoại: <b>${report.phone}</b><br>
                                                            Hình thức báo cáo: <b>${report.reportType}</b><br>
                                                            Nội dung: ${report.content}
                                                            Hình ảnh đối tượng báo cáo:<br><br>
                                                            ${imgDivs}
                                                            Tình trạng xử lí: <b style="color:${getColorByState(report.state)}">${formatState(report.state)}</b><br>
                                                            Hình thức xử lí: <b style="color:${getColorByAction(report.actionHandler)}">${report.actionHandler}</b></p>`;

            document.getElementById('modalContent').innerHTML = details;
        }

        function highlightRow(row) {
            // Remove highlight from all rows
            const rows = document.querySelectorAll('#reportsBody tr');
            rows.forEach(r => r.classList.remove('highlighted'));

            // Add highlight to the clicked row
            row.classList.add('highlighted');
        }

    </script>

</body>

</html>