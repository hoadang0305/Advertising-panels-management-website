<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
<script src="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.0.2/js/toastr.min.js"></script>
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
<div class="control-responsive border p-4 d-flex flex-column align-items-center">
    <div class="container mt-3">
        <div class="mt-3 d-flex justify-content-between">
            <h2 class="mb-4">Loại hình quảng cáo</h2>
            <div>
                <button class="btn btn-success mr-2" data-toggle="modal" data-target="#addModal">
                    <i class="fas fa-plus"></i>
                    Thêm loại hình quảng cáo
                </button>
            </div>
        </div>
        <!-- Table -->
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Phân loại</th>
                        <th scope="col">Tác vụ</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- Add Modal for Add and Edit -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addModalLabel">Thêm loại bảng quảng cáo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addForm">
                    <div class="form-group">
                        <label for="add-data">Loại bảng quảng cáo mới:</label>
                        <input type="text" class="form-control" id="add-data" placeholder="Tên loại bảng" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="addPanelType()">Thêm</button>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Chỉnh sửa phân loại</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <div class="form-group">
                        <label for="edited-id">ID bảng quảng cáo: </label>
                        <input type="text" id="edited-id" style="border: none;" readonly />
                    </div>
                    <div class="form-group">
                        <label for="edit-data">Chỉnh sửa tên loại bảng quảng cáo </label>
                        <input type="text" class="form-control" id="edit-data"
                            placeholder="Nhập tên loại bảng quảng cáo" required />
                        <div class="invalid-feedback">
                            Cung cấp tên loại bảng quảng cáo mới
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="editSelectedRow()">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa loại bảng quảng cáo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label for="delete-id">ID bảng quảng cáo: </label>
                <input type="text" id="delete-id" style="border: none;" readonly />
                <br>Bạn có chắc chắn muốn xóa loại bảng quảng cáo này?
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Quay lại</button>
                <button type="button" class="btn btn-danger" onclick="deleteSelectedRow()">Xóa</button>
            </div>
        </div>
    </div>
</div>

<script>
    toastr.options.closeButton = true;
    toastr.options = {
        "closeButton": true,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-center",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "300",
        "timeOut": "2000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    }
    fetch('http://localhost:3500/api/panelType/getAllPanelType')
        .then(res => res.json())
        .then(data => {
            const listPanelType = data.data;
            listPanelType.forEach(item => {
                const row = `<tr>
                                <th scope="row">${item.panId}</th>
                                <td>${item.panName}</td>
                                <td class="text-nowrap overflow-hidden" style="width: 1%;">
                                    <button class="btn btn-sm btn-primary" onclick="editRow('${item.panId}')" data-toggle="modal"
                                        data-target="#editModal">
                                        <i class="bi bi-pencil"></i>
                                        Edit
                                    </button>
                                    <button class="btn btn-sm btn-danger" onclick="deleteRow('${item.panId}')" data-toggle="modal"
                                        data-target="#deleteModal">
                                        <i class="bi bi-trash"></i>
                                        Delete
                                    </button>
                                </td>
                            </tr>`;
                $('tbody').append(row);
            }
            )
        })
        .catch(err => console.log(err));

    async function addPanelType() {
        const newPanelType = $('#add-data');
        if (!newPanelType.val()) {
            toastr.error("Cần điền tên của loại bảng quảng cáo mới");
            newPanelType.addClass('border-danger');
            newPanelType.focus();
        } else {
            try {
                newPanelType.removeClass('border-danger');
                const response = await fetch('http://localhost:3500/api/panelType/createTypePanel', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        panName: newPanelType.val()
                    })
                })
                if (response.status === 200) {
                    toastr.options.onHidden = () => { window.location.href = "/api/controlPanelType" }
                    toastr.success("Khởi tạo loại hình quảng cáo thành công")
                }
                else {
                    toastr.error("Tên loại hình quảng cáo đã tồn tại")
                }
            } catch (e) {
                toastr.error("Có lỗi không mong đợi. Vui lòng thử lại.");
            }

        }
    }

    function editRow(rowIdentifier) {
        const numericPart = parseInt(rowIdentifier.slice(1), 10);
        const row = document.querySelector(`tbody tr:nth-child(${numericPart})`);

        if (row) {
            console.log(`Editing row ${rowIdentifier}`);
            document.getElementById('edited-id').value = rowIdentifier;
        } else {
            console.log(`Row ${rowIdentifier} not found.`);
        }
    }

    function deleteRow(rowIdentifier) {
        const numericPart = parseInt(rowIdentifier.slice(1), 10);
        const row = document.querySelector(`tbody tr:nth-child(${numericPart})`);

        if (row) {
            console.log(`Deleting row ${rowIdentifier}`);
            document.getElementById('delete-id').value = rowIdentifier;
        } else {
            console.log(`Row ${rowIdentifier} not found.`);
        }
    }

    async function editSelectedRow() {
        const id = document.getElementById('edited-id').value;
        const editedData = $('#edit-data');

        if (!editedData.val()) {
            toastr.error("Cần điền tên của loại bảng quảng cáo");
            editedData.addClass('border-danger');
            editedData.focus();
        }
        else {
            editedData.removeClass('border-danger');
            try {
                //đang sửa tới đây
                const response = await fetch('http://localhost:3500/api/panelType/updateTypePanel', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: id, panName: editedData.val() })
                })
                if (response.status === 200) {
                    toastr.options.onHidden = () => { window.location.href = "/api/controlPanelType" }
                    toastr.success("Chỉnh sửa loại hình quảng cáo thành công")
                } else {
                    toastr.error("Tên loại hình quảng cáo đã tồn tại");
                }
            } catch (e) {
                toastr.error("Có lỗi không mong đợi. Vui lòng thử lại.");
            }
        }

    }

    async function deleteSelectedRow() {
        const id = document.getElementById('delete-id').value;
        try {
            const response = await fetch('http://localhost:3500/api/panelType/deleteTypePanel', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: id })
            });

            if (response.status === 200) {
                toastr.options.onHidden = () => { window.location.href = "/api/controlPanelType" }
                toastr.success("Xóa loại hình quảng cáo thành công")
            } else {
                // Handle error response
                toastr.error('Xóa thất bại, vui lòng thử lại');
            }
        } catch (error) {
            toastr.error("Có lỗi không mong đợi. Vui lòng thử lại.");
        }
    }
</script>